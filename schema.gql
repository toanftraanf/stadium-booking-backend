# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type File {
  id: Int!
  url: String!
  publicId: String
  type: String
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: Int!
  phoneNumber: String
  isVerified: Boolean!
  email: String
  status: UserStatus!
  role: UserRole!
  avatarId: Int
  avatar: File
  fullName: String
  dob: DateTime
  sex: UserSex
  address: String
  userType: UserType
  level: UserLevel
  favoriteSports: [UserFavoriteSport!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum UserStatus {
  PENDING
  ACTIVE
  INACTIVE
  BANNED
}

enum UserRole {
  CUSTOMER
  ADMIN
  OWNER
}

enum UserSex {
  MALE
  FEMALE
  OTHER
}

enum UserType {
  PLAYER
  COACH
}

enum UserLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  PRO
}

type Sport {
  id: Int!
  name: String!
  userFavoriteSports: [UserFavoriteSport!]!
  createdAt: DateTime!
  userCount: Int!
}

type UserFavoriteSport {
  id: Int!
  userId: Int!
  sportId: Int!
  user: User!
  sport: Sport!
  createdAt: DateTime!
}

type AuthResponse {
  user: User!
  accessToken: String!
  refreshToken: String!
}

type Stadium {
  id: ID!
  name: String
  description: String
  address: String
  latitude: Float
  longitude: Float
  googleMap: String
  phone: String
  email: String
  website: String
  otherContacts: [String!]
  startTime: String
  endTime: String
  otherInfo: String
  sports: [String!]
  price: Float
  numberOfFields: Int
  rating: Float
  status: String
  images: [String!]
  bank: String
  accountName: String
  accountNumber: String
  avatarUrl: String
  bannerUrl: String
  galleryUrls: [String!]
  userId: Int!
  user: User
  fields: [StadiumField!]
  createdAt: DateTime!
}

type StadiumField {
  id: ID!
  fieldName: String!
  stadiumId: Int!
  stadium: Stadium!
  createdAt: DateTime!
}

type UploadUrlResponse {
  uploadUrl: String!
  publicId: String!
  signature: String!
  timestamp: Int!
  apiKey: String!
  cloudName: String!
  folder: String!
  fields: String
}

type FileStatsResponse {
  total: Int!
  byType: String!
}

type Reservation {
  id: ID!
  userId: Int!
  stadiumId: Int!
  sport: String!
  courtType: String!
  courtNumber: Int!
  date: String!
  startTime: String!
  endTime: String!
  totalPrice: Int!
  status: String!
  user: User!
  stadium: Stadium!
  createdAt: DateTime!
}

type Query {
  users: [User!]!
  user(id: Int!): User!
  sports: [Sport!]!
  sport(id: Int!): Sport!
  sportWithUserCount(id: Int!): Sport!
  userFavoriteSports(userId: Int!): [Sport!]!
  googleAuthUrl: String!
  googleAuth: User!
  stadiums: [Stadium!]!
  stadium(id: Int!): Stadium!
  stadiumsByUser(userId: Int!): [Stadium!]!
  stadiumsByName(name: String!): [Stadium!]!
  stadiumsByAddress(input: FindStadiumsByAddressInput!): [Stadium!]!
  fields: [StadiumField!]!
  field(id: Int!): StadiumField!
  fieldsByStadium(stadiumId: Int!): [StadiumField!]!
  files: [File!]!
  filesByType(type: String!): [File!]!
  file(id: Int!): File!
  fileByPublicId(publicId: String!): File!
  fileStats: FileStatsResponse!
  reservations: [Reservation!]!
  reservation(id: Int!): Reservation!
  reservationsByUser(userId: Int!): [Reservation!]!
  userReservations(userId: Int!): [Reservation!]!
  reservationsByStadium(stadiumId: Int!): [Reservation!]!
  stadiumReservations(stadiumId: Int!, date: String!): [Reservation!]!
  ownerStadiumReservationsByDateRange(ownerId: Int!, startDate: String!, endDate: String!): [Reservation!]!
}

input FindStadiumsByAddressInput {
  address: String!
  radiusKm: Float = 5
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createSport(createSportInput: CreateSportInput!): Sport!
  updateSport(updateSportInput: UpdateSportInput!): Sport!
  removeSport(id: Int!): Sport!
  addFavoriteSport(addFavoriteSportInput: AddFavoriteSportInput!): UserFavoriteSport!
  removeFavoriteSport(userId: Int!, sportId: Int!): Boolean!
  checkExistingUser(phoneNumber: String!, userRole: String!): User!
  authenticate(phoneNumber: String!, otp: String!): AuthResponse!
  resetOTP(phoneNumber: String!): Boolean!
  googleAuthMobile(idToken: String!): AuthResponse!
  registerOwner(phoneNumber: String!, fullName: String!): User!
  registerCustomer(phoneNumber: String!, fullName: String!): User!
  logout(accessToken: String!, refreshToken: String): Boolean!
  logoutFromAllDevices(userId: Float!): Boolean!
  createStadium(createStadiumInput: CreateStadiumInput!): Stadium!
  createStadiumWithSteps(createStadiumStepsInput: CreateStadiumStepsInput!): Stadium!
  updateStadium(updateStadiumInput: UpdateStadiumInput!): Stadium!
  updateStadiumBank(id: Int!, input: UpdateStadiumBankInput!): Stadium!
  updateStadiumImages(id: Int!, input: UpdateStadiumImagesInput!): Stadium!
  removeStadium(id: Int!): Stadium!
  createField(createFieldInput: CreateFieldInput!): StadiumField!
  updateField(updateFieldInput: UpdateFieldInput!): StadiumField!
  removeField(id: Int!): StadiumField!
  seedDefaultAvatar: Boolean!
  createFile(createFileInput: CreateFileInput!): File!
  generateUploadUrl(fileUploadInput: FileUploadInput!): UploadUrlResponse!
  confirmUpload(url: String!, publicId: String!, type: String): File!
  updateFile(updateFileInput: UpdateFileInput!): File!
  removeFile(id: Int!): Boolean!
  testUploadSampleImage(folder: String = "test"): File!
  uploadImage(uploadInput: DirectUploadInput!): String!
  createReservation(createReservationInput: CreateReservationInput!): Reservation!
  updateReservation(updateReservationInput: UpdateReservationInput!): Reservation!
  updateReservationStatus(id: Int!, status: String!): Reservation!
  removeReservation(id: Int!): Reservation!
}

input CreateUserInput {
  phoneNumber: String!
  role: UserRole
  status: UserStatus
  verifyCode: String
  verifyCodeExpiresAt: DateTime
  avatarUrl: String
  isVerified: Boolean
  userType: UserType
  email: String
  googleId: String
  fullName: String
  avatarId: Int
  dob: DateTime
  sex: UserSex
  address: String
  level: UserLevel
}

input UpdateUserInput {
  id: Int
  phoneNumber: String
  role: UserRole
  status: UserStatus
  verifyCode: String
  verifyCodeExpiresAt: DateTime
  avatarUrl: String
  isVerified: Boolean
  userType: UserType
  email: String
  googleId: String
  fullName: String
  avatarId: Int
  dob: DateTime
  sex: UserSex
  address: String
  level: UserLevel
}

input CreateSportInput {
  name: String!
  description: String!
  googleMap: String!
  phone: String!
  email: String!
  website: String!
  otherContacts: [String!]!
  startTime: String!
  endTime: String!
  otherInfo: String!
  sports: [String!]!
}

input UpdateSportInput {
  id: Int!
  name: String!
  googleMap: String!
  phone: String!
  email: String!
  website: String!
  otherContacts: [String!]!
  description: String!
  startTime: String!
  endTime: String!
  otherInfo: String!
  sports: [String!]!
}

input AddFavoriteSportInput {
  userId: Int!
  sportId: Int!
}

input CreateStadiumInput {
  name: String!
  description: String!
  address: String!
  latitude: Float
  longitude: Float
  googleMap: String!
  phone: String!
  email: String!
  website: String!
  otherContacts: [String!]!
  startTime: String!
  endTime: String!
  otherInfo: String!
  sports: [String!]!
  price: Float!
  numberOfFields: Int!
  rating: Float
  status: String
  images: [String!]
  userId: Int!
}

input CreateStadiumStepsInput {
  stadiumId: Int
  step1Data: Step1Data!
  step2Data: Step2Data!
  userId: Int!
  avatarUrl: String
  bannerUrl: String
  galleryUrls: [String!]
}

input Step1Data {
  description: String!
  address: String
  email: String!
  endTime: String!
  googleMap: String
  latitude: Float
  longitude: Float
  name: String!
  otherContacts: [String!]!
  otherInfo: String
  phone: String!
  sports: [String!]!
  fields: [String!]!
  startTime: String!
  website: String
}

input Step2Data {
  accountName: String!
  accountNumber: String!
  bank: String!
  pricePerHalfHour: Float!
}

input UpdateStadiumInput {
  id: Int!
  name: String
  address: String
  latitude: Float
  longitude: Float
  googleMap: String
  phone: String
  email: String
  website: String
  otherContacts: [String!]
  description: String
  startTime: String
  endTime: String
  otherInfo: String
  sports: [String!]
}

input UpdateStadiumBankInput {
  id: Int!
  bank: String
  accountName: String
  accountNumber: String
}

input UpdateStadiumImagesInput {
  id: Int!
  avatarUrl: String
  bannerUrl: String
  galleryUrls: [String!]
}

input CreateFieldInput {
  fieldName: String!
  stadiumId: Int!
}

input UpdateFieldInput {
  fieldName: String
  stadiumId: Int
  id: Int!
}

input CreateFileInput {
  url: String!
  publicId: String
  type: String
}

input FileUploadInput {
  fileName: String!
  type: String
  folder: String
}

input UpdateFileInput {
  url: String
  publicId: String
  type: String
  id: Int!
}

input DirectUploadInput {
  fileName: String!
  fileData: String!
  folder: String
  type: String
}

input CreateReservationInput {
  userId: Int!
  stadiumId: Int!
  sport: String!
  courtType: String!
  courtNumber: Int!
  date: String!
  startTime: String!
  endTime: String!
  totalPrice: Float!
  status: String
}

input UpdateReservationInput {
  userId: Int
  stadiumId: Int
  sport: String
  courtType: String
  courtNumber: Int
  date: String
  startTime: String
  endTime: String
  totalPrice: Float
  status: String
  id: Int!
}